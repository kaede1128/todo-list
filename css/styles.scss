// The color that will be at the beginning and the end of the loop.
$firstColor: #fce365;
$_bgColor: #181818;
$secondColor: #fde9be;
// The list of all the used colors. You can add or remove colors, the animation stays fluid. The $first-color must remain at the end of the list though.
$listColors: #f56267,
#f7b063,
#62d5f5,
#f5abba,
$firstColor;

$delayCoeff: 0.04s;

body {
  background-color: $_bgColor;
  line-height: 100vh;
  text-align: center;
}

.svg {
  display: inline-block;
  height: 300px;
  width: 300px;
  line-height: 300px;
  text-align: center;
  background-color: #333;
  border-radius: 50%;

  -webkit-animation: light 5s linear infinite;
  animation: light 5s linear infinite;
  -webkit-animation-delay: $delayCoeff;
  animation-delay: $delayCoeff;

  &:hover {
    -webkit-animation-play-state: paused; /* Chrome, Safari, Opera */
    animation-play-state: paused;

  }
}

#svg {
  display: inline-block;
  vertical-align: middle;
  fill: $firstColor;

  @for $i from 1 through 58 {

    path:nth-child(#{$i}) {
      -webkit-animation: pweek 5s linear infinite;
      animation: pweek 5s linear infinite;
      -webkit-animation-delay: $i*$delayCoeff;
      animation-delay: $i*$delayCoeff;

      &:hover {
        -webkit-animation-play-state: paused; /* Chrome, Safari, Opera */
        animation-play-state: paused;

      }
    }
  }
}

@-webkit-keyframes light {
  0% {

    box-shadow: 0px 0px 5rem $secondColor;
  }
  @for $i from 1 through length($listColors) {
    #{percentage($i/length($listColors))} {
      box-shadow: 0px 0px 5rem nth($listColors, $i);
    }
  }
}

@keyframes light {
  0% {

    box-shadow: 0px 0px 5rem $secondColor;
  }
  @for $i from 1 through length($listColors) {
    #{percentage($i/length($listColors))} {
      box-shadow: 0px 0px 5rem nth($listColors, $i);
    }
  }
}

@-webkit-keyframes pweek {
  0% {
    fill: $firstColor;
  }
  @for $i from 1 through length($listColors) {
    #{percentage($i/length($listColors))} {
      fill: nth($listColors, $i);
    }
  }
}

@keyframes pweek {
  0% {
    fill: $firstColor;
  }
  @for $i from 1 through length($listColors) {
    #{percentage($i/length($listColors))} {
      fill: nth($listColors, $i);
    }
  }
}